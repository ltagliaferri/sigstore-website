{
  "group": [
    {
      "groupDiagram": "/img/alt_landscapelayout_overview.svg",
      "groupName": "Overview",
      "textOverview": "First, tell Sigstore to do the signing for you. Using Fulcio, Sigstore requests a certificate from our Certificate Authority (CA). This checks you are who you say you are using OpenID Connect, which looks at an identity, such as an email address, to prove you’re the author. Fulcio grants a short-lived certificate, associating a provided public key with your identity.\n\nYou don’t have to manage keys yourself, and Sigstore never obtains your private key. The public key that Cosign creates gets bound to your certificate.\n\nYour certificate then comes back to a Sigstore client, which signs an artifact. The artifact hash, signature, and certificate are uploaded to a Rekor transparency log, for public auditability of the signing event."
    },
    {
      "groupDiagram": "/img/alt_landscapelayout_developers.svg",
      "groupName": "For developers",
      "textOverview": "To sign your release, an Open ID Connect token exchange is first needed to generate a certificate. It's automatic: a one-click authorization that says you are who you say you are. This certificate gets entered into the transparency log. If you’re not using Cosign’s keyless signing commands you’d still need to export your public key during this step.\n\n`rekor upload` then publishes your signature along with the artifact URL to the transparency log. Rekor verifies everything, downloads a local copy of your artifact and validates the artifact signing. The entry will be made into the log and you’ll get a URL.\n\nWhoever downloads your signed artifact can now look up the signature and URL to verify an inclusion proof, showing the unique information about that artifact proving where, when and who it came from."
    },
    {
      "groupDiagram": "/img/alt_landscapelayout_overview.svg",
      "groupName": "For security ops",
      "textOverview": "Project dependencies (the relationships and links between artifacts in a software supply chain) can create a huge attack surface, one where it’s difficult to trace where each part of the software came from, when and where it was built, the authors, and if they’ve been changed.\n\nThe drive behind sigstore is to make it easier and more automatic for developers releasing open source artifacts for public use to digitally sign what they make, and for security experts to look up those artifacts in sigstore’s transparency log - a public, tamper-proof ledger of signatures.\n\nThe technologies we’ve built are free for anyone to use. They can be configured for public or private use, ready to be integrated as a solution to the problems of open source security and to safeguard against the threat of malicious code injections."
    },
    {
      "groupDiagram": "/img/alt_landscapelayout_developers.svg",
      "groupName": "For maintainers",
      "textOverview": "The Rekor transparency log keeps all the signatures made by someone’s private key, and the time stamps for when they were created. It’s a way to prove that the data was in a developer’s possession and signed before this particular time. If there’s an identity, such as a key or email address, you don’t recognize, it’s a sign that the identity may have been compromised, and what’s been released might not be trustworthy.\n\nThe data available includes the artifact’s cryptographic hash, the public key or certificate, time stamp and artifact signature. It can also include an attestation with the artifact's provenance, where the artifact was built.\n\nsigstore offers these services for free for the public good, though anyone can deploy and run private instances of Rekor and Fulcio. By making sigstore free and public, it’s our aim to help you find ways to build it into security systems, to help with attestation transparency and software integrity checks."
    }
  ]
}
